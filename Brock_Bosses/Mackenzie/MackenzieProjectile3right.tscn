[gd_scene load_steps=6 format=2]

[ext_resource path="res://Particles/Bamm_Projectile.png" type="Texture" id=1]

[sub_resource type="GDScript" id=2]
script/source = "extends Area2D


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"
var rng = RandomNumberGenerator.new()

# Called when the node enters the scene tree for the first time.
func _ready():
	rng.randomize()
	var startScale = rng.randf_range(0.1,.4)
	$Tween.interpolate_property(self,\"scale\",Vector2(startScale,startScale),Vector2(1.2,1.2),.8,Tween.TRANS_LINEAR,Tween.EASE_IN)
	$Tween.interpolate_property(self, \"position:y\", position.y, position.y + 1200, .8,Tween.TRANS_LINEAR,Tween.EASE_IN,.8)
	$Tween.interpolate_property(self, \"position:x\", position.x, position.x - 1200, .8,Tween.TRANS_LINEAR,Tween.EASE_IN,.8)
	$Tween.start()
	yield(get_tree().create_timer(1.6),\"timeout\")
	queue_free()


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass


func _on_MackenzieProjectile_body_entered(body):
	if body.is_in_group(\"Player\"):
		body.damage(1)
		queue_free()
"

[sub_resource type="CircleShape2D" id=1]
radius = 38.1182

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform vec4 flash_color: hint_color = vec4(1.0); 
uniform float flash_modifier: hint_range(0.0,1.0) = 1;

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	color.rgb= mix(color.rgb, flash_color.rgb, flash_modifier);
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/flash_color = Color( 0.0352941, 0.803922, 0.462745, 1 )
shader_param/flash_modifier = 0.729

[node name="MackenzieProjectile" type="Area2D"]
script = SubResource( 2 )

[node name="Tween" type="Tween" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 4, -8 )
shape = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 4 )
scale = Vector2( 0.3, 0.3 )
texture = ExtResource( 1 )

[connection signal="body_entered" from="." to="." method="_on_MackenzieProjectile_body_entered"]
